def separator():
    print('-' * 100)


# Write a function that computes the volume of a sphere given its radius.
# The volume of a sphere is:
# 4/3 Ï€r^3

import math


def vol(rad):
    return (4 / 3) * math.pi * rad ** 3


# 33.49333333333333
print(vol(2))
separator()


# Write a function that checks whether a number is in a given range (inclusive of high and low)
def ran_check(num, low, high):
    if low <= num <= high:
        print(f'{num} is in the range between {low} and {high}')
    else:
        print(f'{num} is NOT in the range between {low} and {high}')


# 5 is in the range between 2 and 7
ran_check(5, 2, 7)
separator()

# 9 is NOT in the range between 2 and 7
ran_check(9, 2, 7)
separator()


# If you only wanted to return a boolean:

def ran_bool(num, low, high):
    return low <= num <= high


# True
print(ran_bool(3, 1, 10))
# False
print(ran_bool(12, 1, 10))
# True
print(ran_bool(10, 1, 10))
separator()


# Write a Python function that accepts a string and calculates the number of upper case letters and lower case letters.
#
# Sample String : 'Hello Mr. Rogers, how are you this fine Tuesday?'
# Expected Output :
# No. of Upper case characters : 4
# No. of Lower case Characters : 33
#
# HINT: Two string methods that might prove useful: .isupper() and .islower()

def up_low(s):
    uppercase = 0
    lowercase = 0
    for letter in s:
        if letter.isupper():
            uppercase += 1
        elif letter.islower():
            lowercase += 1

    print(f'No. of Upper case characters : {uppercase}')
    print(f'No. of Lower case characters : {lowercase}')


# No. of Upper case characters :  4
# No. of Lower case Characters :  33
s = 'Hello Mr. Rogers, how are you this fine Tuesday?'
up_low(s)
separator()


# Write a Python function that takes a list and returns a new list with unique elements of the first list.
#
# Sample List : [1,1,1,1,2,2,3,3,3,3,4,5]
# Unique List : [1, 2, 3, 4, 5]

def unique_list(lst):
    cleaned_list = []
    for element in lst:
        if element not in cleaned_list:
            cleaned_list.append(element)

    return cleaned_list


# [1, 2, 3, 4, 5]
print(unique_list([1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5]))
separator()


# Write a Python function to multiply all the numbers in a list.
#
# Sample List : [1, 2, 3, -4]
# Expected Output : -24


def multiply(numbers):
    result = 1
    for num in numbers:
        result *= num
    return result


# -24
print(multiply([1, 2, 3, -4]))
separator()


# Write a Python function that checks whether a passed in string is palindrome or not.
#
# Note: A palindrome is word, phrase, or sequence that reads the same backward as forward, e.g., madam or nurses run.

def palindrome(s):
    return s == s[::-1]


# True
print(palindrome('helleh'))
# False
print(palindrome('Paula'))
separator()

# Hard:
# Write a Python function to check whether a string is pangram or not.
#
# Note : Pangrams are words or sentences containing every letter of the alphabet at least once.
# For example : "The quick brown fox jumps over the lazy dog"
#
# Hint: Look at the string module

import string


def ispangram(str, alphabet=string.ascii_lowercase):
    alphabet = list(alphabet)
    for letter in list(str):
        if letter in alphabet:
            alphabet.remove(letter)
    return len(alphabet) == 0


# True
print(ispangram("The quick brown fox jumps over the lazy dog"))
